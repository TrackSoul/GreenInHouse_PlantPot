source ~/GrenInHouse/venv_backend/.venv/bin/activate
cd ~/GrenInHouse/components
python3


import os
import inspect
import logging
import connexion  # type: ignore
from typing import Dict, List
from flask import Flask
from flask import current_app
from flask.logging import default_handler
from authlib.jose import JsonWebSignature  # type: ignore
import backend
from backend.data.config import BackendConfiguration
from backend.data.db import Esquema
from datetime import datetime
from backend.data.db.results import RegistroSensor, Sensor, Planta, TipoPlanta
from backend.service import SensorService, RegistroSensorService, PlantaService, TipoPlantaService
from common.data import TipoSensor, ZonaSensor, Planta as PlantaCommon, TipoPlanta as TipoPlantaCommon
from common.data import Sensor as SensorCommon, RegistroSensor as RegistroSensorCommon

cfg: BackendConfiguration = BackendConfiguration()
#cfg.load_from_file(cfg.default_config_file())
db: Esquema = Esquema(cfg)
jws: JsonWebSignature = JsonWebSignature()

specification_dir = os.path.dirname(
    inspect.getfile(backend)) + '/openapi'
app = connexion.FlaskApp(
    __name__,
    specification_dir=specification_dir,
    options={
        "swagger_ui": True,
        "serve_spec": True
    }
)

app.add_api("spec.yml", strict_validation=True)
flask_app = app.app
with flask_app.app_context():
    current_app.db = db
    current_app.cfg = cfg
    current_app.jws = jws
    #current_app.authservice = auth_service

root_logger = logging.getLogger()
root_logger.addHandler(default_handler)



#para desplegar swager
app.run(
    host=cfg.get_service_host(),
    port=cfg.get_service_port(),
    debug=cfg.get_debug_flag(),
    use_reloader=False
)