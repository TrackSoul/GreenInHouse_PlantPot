openapi: 3.0.0
info:
  title: GIH backend service REST API
  version: "1.0"
  description: |
    REST API del servicio de backend.

    Autor: Oscar Valverde Escobar.

    Green In House.
    Grado en Ingeniería Informática, Universidad de Burgos, 2022-2023.
  contact:
    name: Universidad de Burgos
tags:
  - name: Servidor
    description: Operaciones sobre el propio servidor (query de estado del servidor).
  - name: Registros Sensores
    description: Operaciones relaccionadas con los sensores.
  - name: Sensores
    description: Operaciones relaccionadas con los sensores.
  - name: Plantas
    description: Operaciones relaccionadas con los sensores.
  - name: Tipos Plantas
    description: Operaciones relaccionadas con los tipos de plantas.
  - name: Sensores Plantas
    description: Operaciones relaccionadas con las relacciones entre sensores y plantas.
  - name: Consejos
    description: Operaciones relaccionadas con los consejos de cuidado.
servers:
  - url: /api/v1

paths:
  /:
    head:
      summary: Health test for the service
      description: |
        Utilizar esta operacion para verificar que el servidor está corriendo
        y que la API es alcanzable
      operationId: backend.presentation.rest.server_rest.health_test
      responses:
        "204":
          $ref: "#/components/responses/Empty"
      tags:
        - Servidor
  
  /RegistrosSensores/One:
    get:
      summary: Obtener un registro de sensor por su id.
      description: |
        Obtener un registro de sensor por su id.
      operationId: backend.presentation.rest.registro_sensor_rest.get
      parameters:
        - $ref: "#/components/parameters/RegistroSensorIdParam"
      responses:
        "200":
          description: Registro de sensor.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RegistroSensorModel"
              example:
                tipo_sensor: 
                  nombre: "Temperatura y Humedad"
                  tipo: "TEMPERATURA_Y_HUMEDAD"
                zona_sensor: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                numero_sensor: 1
                valor: 25.043
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                fecha: 2023-05-15 10:01:03.791271
                id_: 1
        "404":
          $ref: "#/components/responses/ResgistroSensorNoExiste"
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All:
    get:
      summary: Obtener todos los registros de sensores existentes.
      description: |
        Obtener todos los registros de sensores existentes en la base de datos.
      operationId: backend.presentation.rest.registro_sensor_rest.getAll
      responses:
        "200":
          description: Lista de registros de sensores.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RegistroSensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 25.043
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  fecha: 2023-05-15 10:01:03.791271
                  id_: 1
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 54.567
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.391271
                  id_: 2
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  valor: 40.5463
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.791271
                  id_: 3
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All/FromSensor:
    get:
      summary: Obtener todos los registros del sensor especificado.
      description: |
        Obtener todos los registros del sensor especificado almacenados en la base de datos.
      operationId: backend.presentation.rest.registro_sensor_rest.getAllFromSensor
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
        - $ref: "#/components/parameters/SensorZonaParam"
        - $ref: "#/components/parameters/SensorIdParam"
      responses:
        "200":
          description: Lista de registros del sensor especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RegistroSensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 25.043
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  fecha: 2023-05-15 10:01:03.791271
                  id_: 1
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 54.567
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.391271
                  id_: 2
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  valor: 40.5463
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.791271
                  id_: 3
        "404":
          $ref: "#/components/responses/SensorNoExiste"
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All/FromSensor/BetweenDates:
    get:
      summary: Obtener todos los registros del sensor especificado creados entre las fechas especificadas.
      description: |
        Obtener todos los registros del sensor especificado creados entre las fechas especificadas almacenados en la base de datos.
      operationId: backend.presentation.rest.registro_sensor_rest.getAllFromSensorBetweenDates
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
        - $ref: "#/components/parameters/SensorZonaParam"
        - $ref: "#/components/parameters/SensorIdParam"
        - $ref: "#/components/parameters/FechaInicioParam"
        - $ref: "#/components/parameters/FechaFinParam"
      responses:
        "200":
          description: Lista de registros del sensor especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RegistroSensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 25.043
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  fecha: 2023-05-15 10:01:03.791271
                  id_: 1
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 54.567
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.391271
                  id_: 2
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  valor: 40.5463
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.791271
                  id_: 3
        "404":
          $ref: "#/components/responses/SensorNoExiste"
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaInicio"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaFin"
        "406":
          $ref: "#/components/responses/ErrorIncongruenciaFechas"
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All/FromPlant:
    get:
      summary: Obtener todos los registros de los sensores de la planta especificada.
      description: |
        Obtener todos los registros de los sensores de la planta especificada almacenados en la base de datos.
      operationId: backend.presentation.rest.registro_sensor_rest.getAllFromPlant
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
      responses:
        "200":
          description: Lista de registros de los sensores asociados a la planta especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RegistroSensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 25.043
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  fecha: 2023-05-15 10:01:03.791271
                  id_: 1
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 54.567
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.391271
                  id_: 2
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  valor: 40.5463
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.791271
                  id_: 3
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All/FromPlant/ToGraph:
    get:
      summary: |
        Obtener todos los registros de los sensores de la planta especificada en formato para graficar.
      description: |
        Obtener todos los registros de los sensores de la planta especificada almacenados en la base de datos en formato para graficar.
      operationId: backend.presentation.rest.registro_sensor_rest.getAllFromPlantToGraph
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
      responses:
        "200":
          description: |
            Lista de registros de los sensores asociados a la planta especificada en formato para graficar.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/GrupoRegistrosGraficosModel"
              example:
                - TEMPERATURA: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "ºC"
                        tipo: "GRADOS_CENTIGRADOS"
                      tipo_medida: 
                        nombre: "Temperatura"
                        tipo: "TEMPERATURA"
                      zona_sensor: 
                        nombre: "Ambiente"
                        tipo: "AMBIENTE"
                      lista_valores: [22.0,23.0,22.0]
                      lista_fechas: ["2023-05-14 21:55:16.483217", "2023-05-14 22:05:15.503486", "2023-05-14 22:15:14.536258"]
                - HUMEDAD: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "%"
                        tipo: "PORCENTAJE"
                      tipo_medida: 
                        nombre: "Humedad"
                        tipo: "HUMEDA"
                      zona_sensor: 
                        nombre: "Ambiente"
                        tipo: "AMBIENTE"
                      lista_valores: [48.0,49.0,48.0]
                      lista_fechas: ["2023-05-14 21:55:17.483217", "2023-05-14 22:05:16.503486", "2023-05-14 22:15:15.536258"]
                -  HUMEDAD: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "%"
                        tipo: "MACETA"
                      tipo_medida: 
                        nombre: "Humedad"
                        tipo: "HUMEDA"
                      zona_sensor: 
                        nombre: "Maceta"
                        tipo: "MACETA"
                      lista_valores: [48.0,49.0,48.0]
                      lista_fechas: ["2023-05-14 21:55:17.483217", "2023-05-14 22:05:16.503486", "2023-05-14 22:15:15.536258"]
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "404":
          $ref: "#/components/responses/ErrorProcesarDatosParaGraficar"
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All/FromPlant/BetweenDates:
    get:
      summary: |
        Obtener todos los registros de los sensores asociados a la palnta especificada 
        creados entre las fechas especificadas.
      description: |
        Obtener todos los registros de los sensores asociados a la palnta especificada 
        creados entre las fechas especificadas almacenados en la base de datos.
      operationId: backend.presentation.rest.registro_sensor_rest.getAllFromPlantBetweenDates
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
        - $ref: "#/components/parameters/FechaInicioParam"
        - $ref: "#/components/parameters/FechaFinParam"
      responses:
        "200":
          description: |
            Lista de registros de los sensores asociadas a la planta especificada y
            creados entre las fechas especificadas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RegistroSensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 25.043
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  fecha: 2023-05-15 10:01:03.791271
                  id_: 1
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  valor: 54.567
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.391271
                  id_: 2
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  valor: 40.5463
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha: 2023-05-15 10:01:04.791271
                  id_: 3
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaInicio"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaFin"
        "406":
          $ref: "#/components/responses/ErrorIncongruenciaFechas"
      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/All/FromPlant/BetweenDates/ToGraph:
    get:
      summary: |
        Obtener todos los registros de los sensores de la planta especificada 
        creados entre las fechas especificadas en formato para graficar.
      description: |
        Obtener todos los registros de los sensores de la planta especificada almacenados en la base de datos en formato para graficar.
      operationId: backend.presentation.rest.registro_sensor_rest.getAllFromPlantBetweenDatesToGraph
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
        - $ref: "#/components/parameters/FechaInicioParam"
        - $ref: "#/components/parameters/FechaFinParam"
      responses:
        "200":
          description: |
            Lista de registros de los sensores asociadas a la planta especificada y
            creados entre las fechas especificadas en formato para graficar.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/GrupoRegistrosGraficosModel"
              example:
                - TEMPERATURA: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "ºC"
                        tipo: "GRADOS_CENTIGRADOS"
                      tipo_medida: 
                        nombre: "Temperatura"
                        tipo: "TEMPERATURA"
                      zona_sensor: 
                        nombre: "Ambiente"
                        tipo: "AMBIENTE"
                      lista_valores: [22.0,23.0,22.0]
                      lista_fechas: ["2023-05-14 21:55:16.483217", "2023-05-14 22:05:15.503486", "2023-05-14 22:15:14.536258"]
                - HUMEDAD: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "%"
                        tipo: "PORCENTAJE"
                      tipo_medida: 
                        nombre: "Humedad"
                        tipo: "HUMEDA"
                      zona_sensor: 
                        nombre: "Ambiente"
                        tipo: "AMBIENTE"
                      lista_valores: [48.0,49.0,48.0]
                      lista_fechas: ["2023-05-14 21:55:17.483217", "2023-05-14 22:05:16.503486", "2023-05-14 22:15:15.536258"]
                -  HUMEDAD: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "%"
                        tipo: "MACETA"
                      tipo_medida: 
                        nombre: "Humedad"
                        tipo: "HUMEDA"
                      zona_sensor: 
                        nombre: "Maceta"
                        tipo: "MACETA"
                      lista_valores: [48.0,49.0,48.0]
                      lista_fechas: ["2023-05-14 21:55:17.483217", "2023-05-14 22:05:16.503486", "2023-05-14 22:15:15.536258"]
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechas"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaInicio"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaFin"
        "404":
          $ref: "#/components/responses/ErrorProcesarDatosParaGraficar"

      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /RegistrosSensores/Avg/FromPlant/AgroupByIntervals/ToGraph:
    get:
      summary: |
        Obtener la media de los registros de los sensores de la planta especificada 
        creados entre las fechas especificadas y agrupados en intervalos en formato para graficar.
      description: |
        Obtener las medias de los registros de los sensores de la planta especificada y
        creados entre las fechas especificadas agrupados en intervalos 
        almacenados en la base de datos en formato para graficar.
      operationId: backend.presentation.rest.registro_sensor_rest.getAvgFromPlantAgroupByIntervalsToGraph
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
        - $ref: "#/components/parameters/DiasParam"
        - $ref: "#/components/parameters/FechaFinParam"
      responses:
        "200":
          description: |
            Lista de medias de los registros de los sensores asociadas a la planta especificada y
            creados entre las fechas especificadas agrupados en intervalos en formato para graficar.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/GrupoRegistrosGraficosModel"
              example:
                - TEMPERATURA: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "ºC"
                        tipo: "GRADOS_CENTIGRADOS"
                      tipo_medida: 
                        nombre: "Temperatura"
                        tipo: "TEMPERATURA"
                      zona_sensor: 
                        nombre: "Ambiente"
                        tipo: "AMBIENTE"
                      lista_valores: [22.45,23.34,22.23]
                      lista_fechas: ["2023-05-14 20:00:00.0", "2023-05-14 21:00:00.0", "2023-05-14 22:00:00.0"]
                - HUMEDAD: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "%"
                        tipo: "PORCENTAJE"
                      tipo_medida: 
                        nombre: "Humedad"
                        tipo: "HUMEDA"
                      zona_sensor: 
                        nombre: "Ambiente"
                        tipo: "AMBIENTE"
                      lista_valores: [48.23,49.16,48.95]
                      lista_fechas: ["2023-05-14 20:00:00.0", "2023-05-14 21:00:00.0", "2023-05-14 22:00:00.0"]
                -  HUMEDAD: 
                    AMBIENTE:
                      unidad_medida: 
                        nombre: "%"
                        tipo: "MACETA"
                      tipo_medida: 
                        nombre: "Humedad"
                        tipo: "HUMEDA"
                      zona_sensor: 
                        nombre: "Maceta"
                        tipo: "MACETA"
                      lista_valores: [48.23,49.16,48.95]
                      lista_fechas: ["2023-05-14 20:00:00.0", "2023-05-14 21:00:00.0", "2023-05-14 22:00:00.0"]
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechas"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaInicio"
        "406":
          $ref: "#/components/responses/ErrorFormatoFechaFin"
        "404":
          $ref: "#/components/responses/ErrorProcesarDatosParaGraficar"

      tags:
        - Registros Sensores
      # security:
      #   - api_key: []
      #     user_token: []

  /Sensores/One:
    get:
      summary: Obtener el sensor especificado.
      description: |
        Obtener el sensor especificado almacenado en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.get
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
        - $ref: "#/components/parameters/SensorZonaParam"
        - $ref: "#/components/parameters/SensorIdParam"
      responses:
        "200":
          description: Sensor especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorModel"
              example:
                tipo_sensor: 
                  nombre: "Temperatura y Humedad"
                  tipo: "TEMPERATURA_Y_HUMEDAD"
                zona_sensor: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                numero_sensor: 1
                modelo_sensor: 
                  nombre: "DHT11"
                  tipo: "DHT11"
                nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                direccion_lectura: "RASPBERRY"
                patilla_0_lectura: 20
                unidad_medida_0: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                unidad_medida_1: 
                  nombre: "%"
                  tipo: "PORCENTAJE"
                fecha_creacion: 2023-05-15 10:01:03.791271
        "404":
          $ref: "#/components/responses/SensorNoExiste"
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
    post:
      summary: Crear el saensor especificado.
      description: |
        Crear el senosr especificada y almacenarlo en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.post
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/SensorModel"
            example:
              tipo_sensor: 
                nombre: "Temperatura y Humedad"
                tipo: "TEMPERATURA_Y_HUMEDAD"
              zona_sensor: 
                nombre: "Ambiente"
                tipo: "AMBIENTE"
              numero_sensor: 1
              modelo_sensor: 
                nombre: "DHT11"
                tipo: "DHT11"
              nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
              direccion_lectura: "RASPBERRY"
              patilla_0_lectura: 20
              unidad_medida_0: 
                nombre: "ºC"
                tipo: "GRADOS_CENTIGRADOS"
              unidad_medida_1: 
                nombre: "%"
                tipo: "PORCENTAJE"
              # fecha_creacion: 2023-05-15 10:01:03.791271
      responses:
        "201":
          description: Creado el sensor especificadao.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorModel"
              example:
                tipo_sensor: 
                  nombre: "Temperatura y Humedad"
                  tipo: "TEMPERATURA_Y_HUMEDAD"
                zona_sensor: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                numero_sensor: 1
                modelo_sensor: 
                  nombre: "DHT11"
                  tipo: "DHT11"
                nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                direccion_lectura: "RASPBERRY"
                patilla_0_lectura: 20
                unidad_medida_0: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                unidad_medida_1: 
                  nombre: "%"
                  tipo: "PORCENTAJE"
                # fecha_creacion: 2023-05-15 10:01:03.791271
        "409":
          $ref: "#/components/responses/SensorYaExiste"
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
    put:
      summary: Modificar el saensor especificado.
      description: |
        Modificar el senosr especificada y almacenarlo en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.update
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/SensorModel"
            example:
              tipo_sensor: 
                nombre: "Temperatura y Humedad"
                tipo: "TEMPERATURA_Y_HUMEDAD"
              zona_sensor: 
                nombre: "Ambiente"
                tipo: "AMBIENTE"
              numero_sensor: 1
              modelo_sensor: 
                nombre: "DHT11"
                tipo: "DHT11"
              nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
              direccion_lectura: "RASPBERRY"
              patilla_0_lectura: 20
              unidad_medida_0: 
                nombre: "ºC"
                tipo: "GRADOS_CENTIGRADOS"
              unidad_medida_1: 
                nombre: "%"
                tipo: "PORCENTAJE"
              # fecha_creacion: 2023-05-15 10:01:03.791271
      responses:
        "201":
          description: Modificado el sensor especificadao.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorModel"
              example:
                tipo_sensor: 
                  nombre: "Temperatura y Humedad"
                  tipo: "TEMPERATURA_Y_HUMEDAD"
                zona_sensor: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                numero_sensor: 1
                modelo_sensor: 
                  nombre: "DHT11"
                  tipo: "DHT11"
                nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                direccion_lectura: "RASPBERRY"
                patilla_0_lectura: 20
                unidad_medida_0: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                unidad_medida_1: 
                  nombre: "%"
                  tipo: "PORCENTAJE"
                # fecha_creacion: 2023-05-15 10:01:03.791271
        "404":
          $ref: "#/components/responses/SensorNoExiste"
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
    delete:
      summary: Desactivar el saensor especificado.
      description: |
        Desactivar el senosr especificada y almacenarlo en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.unsubscribe
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
        - $ref: "#/components/parameters/SensorZonaParam"
        - $ref: "#/components/parameters/SensorIdParam"
      responses:
        "201":
          description: Desactivado el sensor especificadao.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorModel"
              example:
                tipo_sensor: 
                  nombre: "Temperatura y Humedad"
                  tipo: "TEMPERATURA_Y_HUMEDAD"
                zona_sensor: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                numero_sensor: 1
                modelo_sensor: 
                  nombre: "DHT11"
                  tipo: "DHT11"
                nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                direccion_lectura: "RASPBERRY"
                patilla_0_lectura: 20
                unidad_medida_0: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                unidad_medida_1: 
                  nombre: "%"
                  tipo: "PORCENTAJE"
                # fecha_creacion: 2023-05-15 10:01:03.791271
        "404":
          $ref: "#/components/responses/SensorNoExiste"
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All:
    get:
      summary: Obtener todos los sensores.
      description: |
        Obtener todos los sensores almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAll
      responses:
        "200":
          description: Listado de todos los sensores.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "FC28"
                    tipo: "FC28"
                  nombre_sensor: "Humedad tierra 1 maceta 1"
                  direccion_lectura: "MCP3008_0"
                  patilla_0_lectura: 8
                  patilla_1_lectura: 0
                  unidad_medida_0: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:04.791271
                - tipo_sensor: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "LDR"
                    tipo: "LDR"
                  nombre_sensor: "Luminosidad 1 maceta 1"
                  direccion_lectura: "MCP3008_0"
                  patilla_0_lectura: 8
                  patilla_1_lectura: 1
                  unidad_medida_0: 
                    nombre: "Lux"
                    tipo: "LUMENES"
                  fecha_creacion: 2023-05-15 10:01:05.791271
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/Active:
    get:
      summary: Obtener todos los sensores activos.
      description: |
        Obtener todos los sensores activos almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllActive
      responses:
        "200":
          description: Listado de todos los sensores activos.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  zona_sensor: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "FC28"
                    tipo: "FC28"
                  nombre_sensor: "Humedad tierra 1 maceta 1"
                  direccion_lectura: "MCP3008_0"
                  patilla_0_lectura: 8
                  patilla_1_lectura: 0
                  unidad_medida_0: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:04.791271
                - tipo_sensor: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "LDR"
                    tipo: "LDR"
                  nombre_sensor: "Luminosidad 1 maceta 1"
                  direccion_lectura: "MCP3008_0"
                  patilla_0_lectura: 8
                  patilla_1_lectura: 1
                  unidad_medida_0: 
                    nombre: "Lux"
                    tipo: "LUMENES"
                  fecha_creacion: 2023-05-15 10:01:05.791271
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/FromType:
    get:
      summary: Obtener todos los sensores de un tipo especifico.
      description: |
        Obtener todos los sensores de un tipo especifico almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllFromType
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
      responses:
        "200":
          description: Listado de todos los sensores del tipo especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 2
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 2 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 21
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:04.791271
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/Active/FromType:
    get:
      summary: Obtener todos los sensores activos de un tipo especifico.
      description: |
        Obtener todos los sensores activos de un tipo especifico almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllActiveFromType
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
      responses:
        "200":
          description: Listado de todos los sensores activos del tipo especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 2
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 2 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 21
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:04.791271
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/FromZone:
    get:
      summary: Obtener todos los sensores de una zona especifica.
      description: |
        Obtener todos los sensores de una zona especifica almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllFromZone
      parameters:
        - $ref: "#/components/parameters/SensorZonaParam"
      responses:
        "200":
          description: Listado de todos los sensores de la zona especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "LDR"
                    tipo: "LDR"
                  nombre_sensor: "Luminosidad 1 maceta 1"
                  direccion_lectura: "MCP3008_0"
                  patilla_0_lectura: 8
                  patilla_1_lectura: 1
                  unidad_medida_0: 
                    nombre: "Lux"
                    tipo: "LUMENES"
                  fecha_creacion: 2023-05-15 10:01:04.791271
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/Active/FromZone:
    get:
      summary: Obtener todos los sensores activos de una zona especifica.
      description: |
        Obtener todos los sensores activos de una zona especifica almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllActiveFromZone
      parameters:
        - $ref: "#/components/parameters/SensorZonaParam"
      responses:
        "200":
          description: Listado de todos los sensores activos de la zona especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "LDR"
                    tipo: "LDR"
                  nombre_sensor: "Luminosidad 1 maceta 1"
                  direccion_lectura: "MCP3008_0"
                  patilla_0_lectura: 8
                  patilla_1_lectura: 1
                  unidad_medida_0: 
                    nombre: "Lux"
                    tipo: "LUMENES"
                  fecha_creacion: 2023-05-15 10:01:04.791271
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/FromTypeAndZone:
    get:
      summary: Obtener todos los sensores de un tipo y zona especificos.
      description: |
        Obtener todos los sensores de un tipo y zona especificos almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllFromTypeAndZone
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
        - $ref: "#/components/parameters/SensorZonaParam"
      responses:
        "200":
          description: Listado de todos los sensores del tipo y zona especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 2
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 2 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 21
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:04.791271
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/Active/FromTypeAndZone:
    get:
      summary: Obtener todos los sensores activos de un tipo y zona especificos.
      description: |
        Obtener todos los sensores activos de un tipo y zona especificos almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllActiveFromTypeAndZone
      parameters:
        - $ref: "#/components/parameters/SensorTipoParam"
        - $ref: "#/components/parameters/SensorZonaParam"
      responses:
        "200":
          description: Listado de todos los sensores activos del tipo y zona especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 2
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 2 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 21
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:04.791271
        "406":
          $ref: "#/components/responses/ErrorTipoSensor"
        "406":
          $ref: "#/components/responses/ErrorZonaSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/FromModel:
    get:
      summary: Obtener todos los sensores de un modelo especifico.
      description: |
        Obtener todos los sensores de un modelo especifico almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllFromModel
      parameters:
        - $ref: "#/components/parameters/SensorModeloParam"
      responses:
        "200":
          description: Listado de todos los sensores de un modelo especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 2
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 2 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 21
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
        "406":
          $ref: "#/components/responses/ErrorModeloSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
  /Sensores/All/Active/FromModel:
    get:
      summary: Obtener todos los sensores activos de un modelo especifico.
      description: |
        Obtener todos los sensores activos de un modelo especifico almacenados en la base de datos.
      operationId: backend.presentation.rest.sensor_rest.getAllActiveFromModel
      parameters:
        - $ref: "#/components/parameters/SensorModeloParam"
      responses:
        "200":
          description: Listado de todos los sensores activos de un modelo especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SensorListModel"
              example:
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 1
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 1 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 20
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
                - tipo_sensor: 
                    nombre: "Temperatura y Humedad"
                    tipo: "TEMPERATURA_Y_HUMEDAD"
                  zona_sensor: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  numero_sensor: 2
                  modelo_sensor: 
                    nombre: "DHT11"
                    tipo: "DHT11"
                  nombre_sensor: "Humedad y temperatura ambiente 2 maceta 1"
                  direccion_lectura: "RASPBERRY"
                  patilla_0_lectura: 21
                  unidad_medida_0: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  unidad_medida_1: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  fecha_creacion: 2023-05-15 10:01:03.791271
        "406":
          $ref: "#/components/responses/ErrorModeloSensor"
      tags:
        - Sensores
      # security:
      #   - api_key: []
      #     user_token: []
 
  /Plantas/One:
    get:
      summary: Obtener la planta especificada.
      description: |
        Obtener la planta especificada almacenada en la base de datos.
      operationId: backend.presentation.rest.planta_rest.get
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
      responses:
        "200":
          description: Planta especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaModel"
              example:
                nombre_planta: "Mi tomatera"
                tipo_planta: "Tomatera"
                fecha_plantacion: 2023-05-15 10:01:03.791271
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
    post:
      summary: Crear la planta especificada.
      description: |
        Crear la planta especificada y almacenarla en la base de datos.
      operationId: backend.presentation.rest.planta_rest.post
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PlantaModel"
            example:
              nombre_planta: "Mi tomatera"
              tipo_planta: "Tomatera"
              # fecha_plantacion: 2023-05-15 10:01:03.791271
      responses:
        "201":
          description: Creada la planta especificadao.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaModel"
              example:
                nombre_planta: "Mi tomatera"
                tipo_planta: "Tomatera"
                fecha_plantacion: 2023-05-15 10:01:03.791271
        "409":
          $ref: "#/components/responses/PlantaYaExiste"
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
    put:
      summary: Modificar la planta especificada.
      description: |
        Modificar la planta especificada y almacenarla en la base de datos.
      operationId: backend.presentation.rest.planta_rest.update
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PlantaModel"
            example:
              nombre_planta: "Mi tomatera"
              tipo_planta: "Tomatera"
              # fecha_plantacion: 2023-05-15 10:01:03.791271
      responses:
        "201":
          description: Modificada la planta especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaModel"
              example:
                nombre_planta: "Mi tomatera"
                tipo_planta: "Tomatera"
                fecha_plantacion: 2023-05-15 10:01:03.791271
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
    delete:
      summary: Dar por marchitada la planta especificada.
      description: |
        Dar por marchitada la planta especificada almacenada en la base de datos.
      operationId: backend.presentation.rest.planta_rest.unsubscribe
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
      responses:
        "201":
          description: Dar por marchitada la planta especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaModel"
              example:
                nombre_planta: "Mi tomatera"
                tipo_planta: "Tomatera"
                fecha_plantacion: 2023-05-15 10:01:03.791271
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
  /Plantas/All:
    get:
      summary: Obtener todas las plantas.
      description: |
        Obtener todas las plantas almacenadas en la base de datos.
      operationId: backend.presentation.rest.planta_rest.getAll
      responses:
        "200":
          description: Listado de todas las plantas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaListModel"
              example:
                - nombre_planta: "Mi tomatera"
                  tipo_planta: "Tomatera"
                  fecha_plantacion: 2023-05-15 10:01:03.791271
                - nombre_planta: "Mi fresal"
                  tipo_planta: "Fresal"
                  fecha_plantacion: 2023-03-16 12:01:03.791271
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
  /Plantas/All/Active:
    get:
      summary: Obtener todas las plantas vivas actualmente.
      description: |
        Obtener todas las plantas vivas actualmente almacenadas en la base de datos.
      operationId: backend.presentation.rest.planta_rest.getAllActive
      responses:
        "200":
          description: Listado de todas las plantas vivas actualmente.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaListModel"
              example:
                - nombre_planta: "Mi tomatera"
                  tipo_planta: "Tomatera"
                  fecha_plantacion: 2023-05-15 10:01:03.791271
                - nombre_planta: "Mi fresal"
                  tipo_planta: "Fresal"
                  fecha_plantacion: 2023-03-16 12:01:03.791271
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
  /Plantas/All/FromType:
    get:
      summary: Obtener todas las plantas de un tipo especificado.
      description: |
        Obtener todas las plantas de un tipo especificado almacenadas 
        en la base de datos.
      operationId: backend.presentation.rest.planta_rest.getAllFromType
      responses:
        "200":
          description: Listado de todas las plantas de un tipo especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaListModel"
              example:
                - nombre_planta: "Mi tomatera"
                  tipo_planta: "Tomatera"
                  fecha_plantacion: 2023-05-15 10:01:03.791271
                - nombre_planta: "Mi fresal"
                  tipo_planta: "Fresal"
                  fecha_plantacion: 2023-03-16 12:01:03.791271
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []
  /Plantas/All/Active/FromType:
    get:
      summary: Obtener todas las plantas vivas actualmente de un tipo especificado.
      description: |
        Obtener todas las plantas vivas actualmente de un tipo especificado almacenadas 
        en la base de datos.
      operationId: backend.presentation.rest.planta_rest.getAllActiveFromType
      responses:
        "200":
          description: Listado de todas las plantas vivas actualmente de un tipo especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PlantaListModel"
              example:
                - nombre_planta: "Mi tomatera"
                  tipo_planta: "Tomatera"
                  fecha_plantacion: 2023-05-15 10:01:03.791271
                - nombre_planta: "Mi fresal"
                  tipo_planta: "Fresal"
                  fecha_plantacion: 2023-03-16 12:01:03.791271
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
      tags:
        - Plantas
      # security:
      #   - api_key: []
      #     user_token: []

  /TiposPlantas/One:
    get:
      summary: Obtener el tipo de planta especificada.
      description: |
        Obtener el tipo de planta especificada almacenada en la base de datos.
      operationId: backend.presentation.rest.tipo_planta_rest.get
      parameters:
        - $ref: "#/components/parameters/NombreTipoPlantaParam"
      responses:
        "200":
          description: Tipo de planta especificada.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TipoPlantaModel"
              example:
                tipo_planta: "Tomatera"
                descripcion_planta: "Planta que da tomates. Es facil de cultivar"
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"

      tags:
        - Tipos Plantas
      # security:
      #   - api_key: []
      #     user_token: []
    post:
      summary: Crear el tipo de planta especificado.
      description: |
        Crear el tipo de planta especificado y almacenarla en la base de datos.
      operationId: backend.presentation.rest.tipo_planta_rest.post
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/TipoPlantaModel"
            example:
              tipo_planta: "Tomatera"
              descripcion_planta: "Planta que da tomates. Es facil de cultivar"
      responses:
        "201":
          description: Creado tipo de planta especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TipoPlantaModel"
              example:
                tipo_planta: "Tomatera"
                descripcion_planta: "Planta que da tomates. Es facil de cultivar"
        "409":
          $ref: "#/components/responses/TipoPlantaYaExiste"
      tags:
        - Tipos Plantas
      # security:
      #   - api_key: []
      #     user_token: []
    put:
      summary: Modificar el tipo de planta especificado.
      description: |
        Modificar el tipo de planta especificado y almacenarla en la base de datos.
      operationId: backend.presentation.rest.tipo_planta_rest.update
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/TipoPlantaModel"
            example:
              tipo_planta: "Tomatera"
              descripcion_planta: "Planta que da tomates. Es facil de cultivar"
      responses:
        "201":
          description: Modificado tipo de planta especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TipoPlantaModel"
              example:
                tipo_planta: "Tomatera"
                descripcion_planta: "Planta que da tomates. Es facil de cultivar"
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
      tags:
        - Tipos Plantas
      # security:
      #   - api_key: []
      #     user_token: []
  /TiposPlantas/All:
    get:
      summary: Obtener todos los tipos de plantas.
      description: |
        Obtener todos los tipos de plantas almacenadas en la base de datos.
      operationId: backend.presentation.rest.tipo_planta_rest.getAll
      responses:
        "200":
          description: Listado de todos los tipos de plantas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TipoPlantaListModel"
              example:
                - tipo_planta: "Tomatera"
                  descripcion_planta: "Planta que da tomates. Es facil de cultivar."
                - tipo_planta: "Fresal"
                  descripcion_planta: "Planta que da fresas. Es facil de cultivar."
      tags:
        - Tipos Plantas
      # security:
      #   - api_key: []
      #     user_token: []

  /Consejos/TiposPlantas/One:
    get:
      summary: Obtener el consejo especificado de un tipo de planta, zona y tipo de medida.
      description: |
        Obtener el consejo especificado de un tipo de planta, zona y tipo de medida almacenado en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.get
      parameters:
        - $ref: "#/components/parameters/NombreTipoPlantaParam"
        - $ref: "#/components/parameters/ConsejoZonaParam"
        - $ref: "#/components/parameters/MedidaTipoParam"
      responses:
        "200":
          description: Consejo de tipo de planta, zona y tipo de medida especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaModel"
              example:
                descripcion: "Temperatura ambiente recomendada."
                nombre_elemento: "Tomatera"
                zona_consejo: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                tipo_medida: 
                  nombre: "Temperatura"
                  tipo: "TEMPERATURA"
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                valor_minimo: 15.0
                valor_maximo: 25.0
        "404":
          $ref: "#/components/responses/ConsejoTipoPlantaNoExiste"
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorZonaConsejo"
        "406":
          $ref: "#/components/responses/ErrorTipoMedida"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
    post:
      summary: Crear el consejo del tipo de planta especificado.
      description: |
        Crear el consejo del tipo de planta especificado y almacenarla en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.post
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ConsejoTipoPlantaModel"
            example:
              descripcion: "Temperatura ambiente recomendada."
              nombre_elemento: "Tomatera"
              zona_consejo: 
                nombre: "Ambiente"
                tipo: "AMBIENTE"
              tipo_medida: 
                nombre: "Temperatura"
                tipo: "TEMPERATURA"
              unidad_medida: 
                nombre: "ºC"
                tipo: "GRADOS_CENTIGRADOS"
              valor_minimo: 15.0
              valor_maximo: 25.0
      responses:
        "201":
          description: Creado el consejo del tipo de planta especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaModel"
              example:
                descripcion: "Temperatura ambiente recomendada."
                nombre_elemento: "Tomatera"
                zona_consejo: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                tipo_medida: 
                  nombre: "Temperatura"
                  tipo: "TEMPERATURA"
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                valor_minimo: 15.0
                valor_maximo: 25.0
        "409":
          $ref: "#/components/responses/ConsejoTipoPlantaYaExiste"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
    put:
      summary: Modificar el consejo del tipo de planta especificado.
      description: |
        Modificar el consejo del tipo de planta especificado y almacenarla en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.update
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ConsejoTipoPlantaModel"
            example:
              descripcion: "Temperatura ambiente recomendada."
              nombre_elemento: "Tomatera"
              zona_consejo: 
                nombre: "Ambiente"
                tipo: "AMBIENTE"
              tipo_medida: 
                nombre: "Temperatura"
                tipo: "TEMPERATURA"
              unidad_medida: 
                nombre: "ºC"
                tipo: "GRADOS_CENTIGRADOS"
              valor_minimo: 15.0
              valor_maximo: 25.0
      responses:
        "201":
          description: Modificar el consejo del tipo de planta especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaModel"
              example:
                descripcion: "Temperatura ambiente recomendada."
                nombre_elemento: "Tomatera"
                zona_consejo: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                tipo_medida: 
                  nombre: "Temperatura"
                  tipo: "TEMPERATURA"
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                valor_minimo: 15.0
                valor_maximo: 25.0
        "409":
          $ref: "#/components/responses/ConsejoTipoPlantaNoExiste"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/TiposPlantas/All:
    get:
      summary: Obtener todos los consejos de tipos de plantas.
      description: |
        Obtener todos los consejos de tipos de plantas almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.getAll
      responses:
        "200":
          description: Todos los consejo de tipos de plantas especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/TiposPlantas/All/FromTypePlant:
    get:
      summary: Obtener todos los consejos de un tipo de planta especificado.
      description: |
        Obtener todos los consejos del tipo de planta almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.getAllFromTypePlant
      parameters:
        - $ref: "#/components/parameters/NombreTipoPlantaParam"
      responses:
        "200":
          description: Todos los consejos de un tipo de planta especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/TiposPlantas/All/FromZone:
    get:
      summary: Obtener todos los consejos de la zona especificada de todos los tipos de plantas.
      description: |
        Obtener todos los consejos de la zona especificada de todos los tipos de plantas almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.getAllFromZone
      parameters:
        - $ref: "#/components/parameters/ConsejoZonaParam"
      responses:
        "200":
          description: Todos los consejos de una zona especificada de todos los tipos de plantas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
        "406":
          $ref: "#/components/responses/ErrorZonaConsejo"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/TiposPlantas/All/FromTypeMeasure:
    get:
      summary: Obtener todos los consejos del tipo de medida especificados de todos los tipos de plantas.
      description: |
        Obtener todos los consejos del tipo de medida especificados de todos los tipos de plantas almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.getAllFromTypeMeasure
      parameters:
        - $ref: "#/components/parameters/MedidaTipoParam"
      responses:
        "200":
          description: Todos los consejos de un tipo de medida especificado de todos los tipos de plantas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaListModel"
              example:
                - descripcion: "Humedad ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  valor_minimo: 30.0
                  valor_maximo: 60.0
                - descripcion: "Humedad de la maceta recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  tipo_medida: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  valor_minimo: 40.0
                  valor_maximo: 70.0
        "406":
          $ref: "#/components/responses/ErrorTipoMedida"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/TiposPlantas/All/FromTypePlantAndZone:
    get:
      summary: Obtener todos los consejos de un tipo de planta y de una zona zona especificados.
      description: |
        Obtener todos los consejos del tipo de planta y zona especificados almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_tipo_planta_rest.getAllFromTypePlantAndZone
      parameters:
        - $ref: "#/components/parameters/NombreTipoPlantaParam"
        - $ref: "#/components/parameters/ConsejoZonaParam"
      responses:
        "200":
          description: Todos los consejos de un tipo de planta y de una zona zona especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoTipoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
        "404":
          $ref: "#/components/responses/TipoPlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorZonaConsejo"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []

  /Consejos/Plantas/One:
    get:
      summary: Obtener el consejo especificado de una planta, zona y tipo de medida.
      description: |
        Obtener el consejo especificado de una planta, zona y tipo de medida almacenado en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.get
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
        - $ref: "#/components/parameters/ConsejoZonaParam"
        - $ref: "#/components/parameters/MedidaTipoParam"
      responses:
        "200":
          description: Consejo de planta, zona y tipo de medida especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaModel"
              example:
                descripcion: "Temperatura ambiente recomendada."
                nombre_elemento: "Mi tomatera"
                zona_consejo: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                tipo_medida: 
                  nombre: "Temperatura"
                  tipo: "TEMPERATURA"
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                valor_minimo: 15.0
                valor_maximo: 25.0
        "404":
          $ref: "#/components/responses/ConsejoPlantaNoExiste"
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorZonaConsejo"
        "406":
          $ref: "#/components/responses/ErrorTipoMedida"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
    post:
      summary: Crear el consejo de planta especificado.
      description: |
        Crear el consejo de planta especificado y almacenarla en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.post
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ConsejoPlantaModel"
            example:
              descripcion: "Temperatura ambiente recomendada."
              nombre_elemento: "Mi tomatera"
              zona_consejo: 
                nombre: "Ambiente"
                tipo: "AMBIENTE"
              tipo_medida: 
                nombre: "Temperatura"
                tipo: "TEMPERATURA"
              unidad_medida: 
                nombre: "ºC"
                tipo: "GRADOS_CENTIGRADOS"
              valor_minimo: 15.0
              valor_maximo: 25.0
      responses:
        "201":
          description: Creado el consejo de planta especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaModel"
              example:
                descripcion: "Temperatura ambiente recomendada."
                nombre_elemento: "Mi tomatera"
                zona_consejo: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                tipo_medida: 
                  nombre: "Temperatura"
                  tipo: "TEMPERATURA"
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                valor_minimo: 15.0
                valor_maximo: 25.0
        "409":
          $ref: "#/components/responses/ConsejoTipoPlantaYaExiste"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
    put:
      summary: Modificar el consejo de planta especificado.
      description: |
        Modificar el consejo de planta especificado y almacenarla en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.update
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ConsejoPlantaModel"
            example:
              descripcion: "Temperatura ambiente recomendada."
              nombre_elemento: "Mi tomatera"
              zona_consejo: 
                nombre: "Ambiente"
                tipo: "AMBIENTE"
              tipo_medida: 
                nombre: "Temperatura"
                tipo: "TEMPERATURA"
              unidad_medida: 
                nombre: "ºC"
                tipo: "GRADOS_CENTIGRADOS"
              valor_minimo: 15.0
              valor_maximo: 25.0
      responses:
        "201":
          description: Modificar el consejo de planta especificado.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaModel"
              example:
                descripcion: "Temperatura ambiente recomendada."
                nombre_elemento: "Mi tomatera"
                zona_consejo: 
                  nombre: "Ambiente"
                  tipo: "AMBIENTE"
                tipo_medida: 
                  nombre: "Temperatura"
                  tipo: "TEMPERATURA"
                unidad_medida: 
                  nombre: "ºC"
                  tipo: "GRADOS_CENTIGRADOS"
                valor_minimo: 15.0
                valor_maximo: 25.0
        "409":
          $ref: "#/components/responses/ConsejoPlantaNoExiste"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []      
  /Consejos/Plantas/All:
    get:
      summary: Obtener todos los consejos de plantas.
      description: |
        Obtener todos los consejos de plantas almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.getAll
      responses:
        "200":
          description: Todos los consejo de plantas especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/Plantas/All/FromPlant:
    get:
      summary: Obtener todos los consejos de una planta especificado.
      description: |
        Obtener todos los consejos de la planta almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.getAllFromPlant
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
      responses:
        "200":
          description: Todos los consejos de una planta especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/Plantas/All/FromZone:
    get:
      summary: Obtener todos los consejos de la zona especificada de todas las plantas.
      description: |
        Obtener todos los consejos de la zona especificada de todas las plantas almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.getAllFromZone
      parameters:
        - $ref: "#/components/parameters/ConsejoZonaParam"
      responses:
        "200":
          description: Todos los consejos de una zona especificada de todas las plantas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
        "406":
          $ref: "#/components/responses/ErrorZonaConsejo"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/Plantas/All/FromTypeMeasure:
    get:
      summary: Obtener todos los consejos del tipo de medida especificados de todas las plantas.
      description: |
        Obtener todos los consejos del tipo de medida especificados de todas las plantas almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.getAllFromTypeMeasure
      parameters:
        - $ref: "#/components/parameters/MedidaTipoParam"
      responses:
        "200":
          description: Todos los consejos de un tipo de medida especificado de todas las plantas.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaListModel"
              example:
                - descripcion: "Humedad ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  valor_minimo: 30.0
                  valor_maximo: 60.0
                - descripcion: "Humedad de la maceta recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Maceta"
                    tipo: "MACETA"
                  tipo_medida: 
                    nombre: "Humedad"
                    tipo: "HUMEDAD"
                  unidad_medida: 
                    nombre: "%"
                    tipo: "PORCENTAJE"
                  valor_minimo: 40.0
                  valor_maximo: 70.0
        "406":
          $ref: "#/components/responses/ErrorTipoMedida"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []
  /Consejos/Plantas/All/FromPlantAndZone:
    get:
      summary: Obtener todos los consejos de una planta y de una zona zona especificados.
      description: |
        Obtener todos los consejos de la planta y zona especificados almacenados en la base de datos.
      operationId: backend.presentation.rest.consejo_planta_rest.getAllFromPlantAndZone
      parameters:
        - $ref: "#/components/parameters/NombrePlantaParam"
        - $ref: "#/components/parameters/ConsejoZonaParam"
      responses:
        "200":
          description: Todos los consejos de una planta y de una zona zona especificados.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ConsejoPlantaListModel"
              example:
                - descripcion: "Temperatura ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Temperatura"
                    tipo: "TEMPERATURA"
                  unidad_medida: 
                    nombre: "ºC"
                    tipo: "GRADOS_CENTIGRADOS"
                  valor_minimo: 15.0
                  valor_maximo: 25.0
                - descripcion: "Luminosidad ambiente recomendada."
                  nombre_elemento: "Mi tomatera"
                  zona_consejo: 
                    nombre: "Ambiente"
                    tipo: "AMBIENTE"
                  tipo_medida: 
                    nombre: "Luminosidad"
                    tipo: "LUMINOSIDAD"
                  unidad_medida: 
                    nombre: "Lux"
                    tipo: "LUMINOSIDAD"
                  valor_minimo: 500.0
                  valor_maximo: 800.0
                  horas_minimas: 6.0
                  horas_maximas: 8.0
        "404":
          $ref: "#/components/responses/PlantaNoExiste"
        "406":
          $ref: "#/components/responses/ErrorZonaConsejo"
      tags:
        - Consejos
      # security:
      #   - api_key: []
      #     user_token: []


components:
  schemas:
    EmptyContentModel:
      description: Empty content model.
      type: string
      nullable: true
    TipoSensorModel:
      description: Tipo sensor.
      type: object
      properties:
        nombre:
          type: string
        tipo:
          type: string
          enum:
            - SIN_TIPO
            - HUMEDAD
            - TEMPERATURA
            - TEMPERATURA_Y_HUMEDAD
            - LUMINOSIDAD
            - OTRO
      required:
        - nombre
        - tipo   
    ZonaSensorModel:
      description: Zona sensor.
      type: object
      properties:
        nombre:
          type: string
        tipo:
          type: string
          enum:
            - SIN_ZONA
            - AMBIENTE
            - MACETA
            - SUELO
            - OTRA
      required:
        - nombre
        - tipo
    ModeloSensorModel:
      description: Modelo sensor.
      type: object
      properties:
        nombre:
          type: string
        tipo:
          type: string
          enum:
            - SIN_MODELO
            - DHT11
            - LDR
            - LM35
            - FC28
            - OTRO
      required:
        - nombre
        - tipo
    TipoMedidaModel:
      description: Tipo de medida.
      type: object
      properties:
        nombre:
          type: string
        tipo:
          type: string
          enum:
            - SIN_TIPO
            - HUMEDAD
            - TEMPERATURA
            - LUMINOSIDAD
            - OTRO
      required:
        - nombre
        - tipo   
    UnidadMedidaModel:
      description: Unidad de medida.
      type: object
      properties:
        nombre:
          type: string
        tipo:
          type: string
          enum:
            - SIN_UNIDAD
            - PORCENTAJE
            - GRADOS_CENTIGRADOS
            - GRADOS_FARENHEIT
            - LUMENES
            - OTRO
      required:
        - nombre
        - tipo
    SensorModel:
      description: Datos de sensor.
      type: object
      properties:
        tipo_sensor:
          $ref: "#/components/schemas/TipoSensorModel"
        zona_sensor:
          $ref: "#/components/schemas/ZonaSensorModel"
        numero_sensor:
          type: integer
        modelo_sensor:
          $ref: "#/components/schemas/ModeloSensorModel"
        nombre_sensor:
          type: string
        direccion_lectura:
          type: string
        patilla_0_lectura:
          type: integer
        patilla_1_lectura:
          type: integer
          nullable: true
        patilla_2_lectura:
          type: integer
          nullable: true
        patilla_3_lectura:
          type: integer
          nullable: true
        unidad_medida_0:
          $ref: "#/components/schemas/UnidadMedidaModel"
        unidad_medida_1:
          $ref: "#/components/schemas/UnidadMedidaModel"
          nullable: true
        unidad_medida_2:
          $ref: "#/components/schemas/UnidadMedidaModel"
          nullable: true
        unidad_medida_3:
          $ref: "#/components/schemas/UnidadMedidaModel"
          nullable: true
        fecha_creacion:
          type: string
          format: date-time
        fecha_eliminacion:
          type: string
          format: date-time
          nullable: true
      required:
        - tipo_sensor
        - zona_sensor
        - numero_sensor
        - modelo_sensor
        - nombre_sensor
        - direccion_lectura
        - patilla_0_lectura
        - unidad_medida_0
        # - fecha_creacion
    SensorListModel:
      type: array
      items:
        $ref: "#/components/schemas/SensorModel"
    RegistroSensorModel:
      description: Datos de registro de sensor.
      type: object
      properties:
        tipo_sensor:
          $ref: "#/components/schemas/TipoSensorModel"
        zona_sensor:
          $ref: "#/components/schemas/ZonaSensorModel"
        numero_sensor:
          type: integer
        valor:
          type: number
        unidad_medida:
          $ref: "#/components/schemas/UnidadMedidaModel"
        fecha:
          type: string
          format: date-time
        id_:
          type: integer
      required:
        - tipo_sensor
        - zona_sensor
        - numero_sensor
        - valor
        - unidad_medida
        - fecha
        - id_
    RegistroSensorListModel:
      type: array
      items:
        $ref: "#/components/schemas/RegistroSensorModel"
    SensorPlantaModel:
      description: Datos de union entre un sensor y una planta.
      type: object
      properties:
        tipo_sensor:
          $ref: "#/components/schemas/TipoSensorModel"
        zona_sensor:
          $ref: "#/components/schemas/ZonaSensorModel"
        numero_sensor:
          type: integer
        nombre_planta:
          type: string
        fecha_asociacion:
          type: string
          format: date-time
        fecha_anulacion:
          type: string
          format: date-time
          nullable: true
        id_:
          type: integer
      required:
        - tipo_sensor
        - zona_sensor
        - numero_sensor
        - nombre_planta
        - fecha_asociacion
        - id_
    SensorPlantaListModel:
      type: array
      items:
        $ref: "#/components/schemas/SensorPlantaModel"
    PlantaModel:
      description: Datos de una planta.
      type: object
      properties:
        nombre_planta:
          type: string
        tipo_planta:
          type: string
        fecha_plantacion:
          type: string
          format: date-time
        fecha_marchitacion:
          type: string
          format: date-time
          nullable: true
      required:
        - nombre_planta
        - tipo_planta
    PlantaListModel:
      type: array
      items:
        $ref: "#/components/schemas/PlantaModel"
    TipoPlantaModel:
      description: Datos de un tipo de planta.
      type: object
      properties:
        tipo_planta:
          type: string
        descripcion_planta:
          type: string
      required:
        - tipo_planta
        - descripcion_planta
    TipoPlantaListModel:
      type: array
      items:
        $ref: "#/components/schemas/TipoPlantaModel"
    ConsejoTipoPlantaModel:
      description: Datos de un consejo de un tipo de planta.
      type: object
      properties:
        descripcion:
          type: string
        nombre_elemento:
          type: string
        zona_consejo:
          $ref: "#/components/schemas/ZonaSensorModel"
        tipo_medida:
          $ref: "#/components/schemas/TipoMedidaModel"
        unidad_medida:
          $ref: "#/components/schemas/UnidadMedidaModel"
        valor_minimo:
          type: number
        valor_maximo:
          type: number
        horas_minimas:
          type: number
        horas_maximas:
          type: number
      required:
        - descripcion
        - nombre_elemento
        - zona_consejo
        - tipo_medida
        - unidad_medida
        - valor_minimo
        - valor_maximo
    ConsejoTipoPlantaListModel:
      type: array
      items:
        $ref: "#/components/schemas/ConsejoTipoPlantaModel"       
    ConsejoPlantaModel:
      description: Datos de un consejo de una planta.
      type: object
      properties:
        descripcion:
          type: string
        nombre_elemento:
          type: string
        zona_consejo:
          $ref: "#/components/schemas/ZonaSensorModel"
        tipo_medida:
          $ref: "#/components/schemas/TipoMedidaModel"
        unidad_medida:
          $ref: "#/components/schemas/UnidadMedidaModel"
        valor_minimo:
          type: number
        valor_maximo:
          type: number
        horas_minimas:
          type: number
        horas_maximas:
          type: number
      required:
        - descripcion
        - nombre_elemento
        - zona_consejo
        - tipo_medida
        - unidad_medida
        - valor_minimo
        - valor_maximo
    ConsejoPlantaListModel:
      type: array
      items:
        $ref: "#/components/schemas/ConsejoPlantaModel"       
    RegistrosGraficoModel:
      description: Datos de registros adaptados para ser leido por un grafico.
      type: object
      properties:
        unidad_medida:
          $ref: "#/components/schemas/UnidadMedidaModel"
        tipo_medida:
          $ref: "#/components/schemas/TipoMedidaModel"
        zona_sensor:
          $ref: "#/components/schemas/ZonaSensorModel"
        lista_valores:
          type: array
          items:
            type: number
        lista_fechas:
          type: array
          items:
            type: string
            format: date-time
      required:
        - unidad_medida
        - tipo_medida
        - zona_sensor
        - lista_valores
        - lista_fechas
    GrupoRegistrosGraficosModel:
      description: Grupo de datos de registros adaptados para ser leido por un grafico.
      type: object
      properties:
        TEMPERATURA:
          type: object
          properties:
            AMBIENTE:
              $ref: "#/components/schemas/UnidadMedidaModel"
        HUMEDAD:
          type: object
          properties:
            AMBIENTE:
              $ref: "#/components/schemas/UnidadMedidaModel"
            MACETA:
              $ref: "#/components/schemas/UnidadMedidaModel"
        LUMINOSIDAD:
          type: object
          properties:
            AMBIENTE:
              $ref: "#/components/schemas/UnidadMedidaModel"

  parameters:
    RegistroSensorIdParam:
      name: rsid
      description: Id del registro de sensor.
      in: query
      schema:
        type: integer
      required: true
    SensorTipoParam:
      name: st
      description: Tipo del sensor.
      in: query
      schema:
        type: string
      required: true
    SensorZonaParam:
      name: sz
      description: Zona del sensor.
      in: query
      schema:
        type: string
      required: true
    SensorIdParam:
      name: sid
      description: Id del sensor.
      in: query
      schema:
        type: integer
      required: true
    SensorModeloParam:
      name: sm
      description: Modelo del sensor.
      in: query
      schema:
        type: string
      required: true
    NombrePlantaParam:
      name: np
      description: Nombre de la planta.
      in: query
      schema:
        type: string
      required: true    
    NombreTipoPlantaParam:
      name: ntp
      description: Nombre del tipo de la planta.
      in: query
      schema:
        type: string
      required: true
    FechaInicioParam:
      name: fi
      description: Fecha de inicio de busqueda.
      in: query
      schema:
        type: string
      required: true
    FechaFinParam:
      name: ff
      description: Fecha de fin de busqueda.
      in: query
      # in: path
      schema:
        type: string
      required: false
    ConsejoZonaParam:
      name: cz
      description: Zona del consejo.
      in: query
      schema:
        type: string
      required: true
    MedidaTipoParam:
      name: mt
      description: Tipo de medida.
      in: query
      schema:
        type: string
      required: true
    MedidaUnidadParam:
      name: mu
      description: Unidad de medida.
      in: query
      schema:
        type: string
      required: true
    DiasParam:
      name: d
      description: Numero de dias.
      in: query
      schema:
        type: integer
      required: true

  responses:
    Empty:
      description: Respuesta con contenido vacio.
      content:
        "text/plain":
          schema:
            $ref: "#/components/schemas/EmptyContentModel"
          example: ""

    # 404
    ResgistroSensorNoExiste:
      description: El registro del sensor no existe.
      content:
        "text/plain":
          schema:
            $ref: "#/components/schemas/EmptyContentModel"
          example: "El registro de sensor EJEMPLO no existe."
    SensorNoExiste:
      description: El sensor especificado no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El sensor EJEMPLO_ID de tipo EJEMPLO_TIPO de la zona EJEMPLO_ZONA no existe."
    PlantaNoExiste:      
      description: La planta especificada no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "La planta EJEMPLO no existe."
    TipoPlantaNoExiste:      
      description: El tipo de planta especificada no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El tipo de planta EJEMPLO no existe."
    SensorPlantaNoExiste:      
      description: La relaccion entre el sensor y la planta especificados no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "La relaccion entre el sensor EJEMPLO_ID de tipo EJEMPLO_TIPO de la zona EJEMPLO_ZONA y la planta EJEMPLO_PLANTA no existe."
    ConsejoTipoPlantaNoExiste:      
      description: El consejo del tipo de planta, zona y tipo de medida especificados no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El consejo del tipo de planta EJEMPLO_TIPO_PLANTA para la medida EJEMPLO_TIPO_MEDIDA en la zona EJEMPLO_ZONA no existe."
    ConsejoPlantaNoExiste:      
      description: El consejo de la planta, zona y tipo de medida especificados no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El consejo de la planta EJEMPLO_PLANTA para la medida EJEMPLO_TIPO_MEDIDA en la zona EJEMPLO_ZONA no existe."
    ErrorProcesarDatosParaGraficar:
      description: Error al procesar los datos de la planta para graficar .
      content:
        "text/plain":
          schema:
            type: string
          example: Error al procesar los datos de la planta EJEMPLO para graficar.


    # 406
    ErrorTipoSensor:
      description: Los datos del tipo de sensor especificados no son correctos.
      content:
        "text/plain":
          schema:
            type: string
          example: "El tipo de sensor EJEMPLO no existe."
    ErrorZonaSensor:
      description: Los datos de la zona de sensor especificados no son correctos.
      content:
        "text/plain":
          schema:
            type: string
          example: "La zona de sensor EJEMPLO no existe."
    ErrorModeloSensor:
      description: El modelo de sensor especificado no existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El modelo de sensor EJEMPLO no existe."
    ErrorZonaConsejo:
      description: Los datos de la zona del consejo especificados no son correctos.
      content:
        "text/plain":
          schema:
            type: string
          example: "La zona de consejo EJEMPLO no existe."   
    ErrorTipoMedida:
      description: Los datos del tipo de medida especificados no son correctos.
      content:
        "text/plain":
          schema:
            type: string
          example: "El tipo de medida EJEMPLO no existe."   
    ErrorUnidadMedida:
      description: Los datos de la unidad de medida especificados no son correctos.
      content:
        "text/plain":
          schema:
            type: string
          example: "La unidad de medida EJEMPLO no existe."    
    ErrorFormatoFechaInicio:
      description: Los datos de fecha inicio no tienen el formato correcto.
      content:
        "text/plain":
          schema:
            type: string
          example: "Error en el formato de la fecha de inicio EJEMPLO ."
    ErrorFormatoFechaFin:
      description: Los datos de fecha fin no tienen el formato correcto.
      content:
        "text/plain":
          schema:
            type: string
          example: "Error en el formato de la fecha de fin EJEMPLO ."
    ErrorIncongruenciaFechas:
      description: Incongruencia en fechas.
      content:
        "text/plain":
          schema:
            type: string
          example: La fecha de inicio EJEMPLO_INICIO no puede ser mayor que la fecha de fin EJEMPLO_FIN .
  
    # 409
    ResgistroSensorYaExiste:
      description: El registro del sensor ya existe.
      content:
        "text/plain":
          schema:
            $ref: "#/components/schemas/EmptyContentModel"
          example: "El registro de sensor EJEMPLO ya existe."
    SensorYaExiste:
      description: El sensor especificado ya existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El sensor EJEMPLO_ID de tipo EJEMPLO_TIPO de la zona EJEMPLO_ZONA ya existe."
    PlantaYaExiste:      
      description: La planta especificada ya existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "La planta EJEMPLO ya existe."
    TipoPlantaYaExiste:      
      description: El tipo de planta especificada ya existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El tipo de planta EJEMPLO ya existe."
    SensorPlantaYaExiste:      
      description: La relaccion entre el sensor y la planta especificados ya existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "La relaccion entre el sensor EJEMPLO_ID de tipo EJEMPLO_TIPO de la zona EJEMPLO_ZONA y la planta EJEMPLO_PLANTA ya existe."
    ConsejoTipoPlantaYaExiste:      
      description: El consejo del tipo de planta, zona y tipo de medida especificados ya existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El consejo del tipo de planta EJEMPLO_TIPO_PLANTA para la medida EJEMPLO_TIPO_MEDIDA en la zona EJEMPLO_ZONA ya existe."
    ConsejoPlantaYaExiste:      
      description: El consejo de la planta, zona y tipo de medida especificados ya existe.
      content:
        "text/plain":
          schema:
            type: string
          example: "El consejo de la planta EJEMPLO_PLANTA para la medida EJEMPLO_TIPO_MEDIDA en la zona EJEMPLO_ZONA ya existe."


#   securitySchemes:
#     api_key:
#       description: |
#         Secret shared between both the requestor and the service.
#       type: apiKey
#       name: X-ApiKey-Backend
#       in: header
#       x-apikeyInfoFunc: backend.presentation.rest.security_rest.verify_api_key
#     user_token:
#       description: |
#         JWS token sent in the `Authorization` header as bearer.
#         Contains, among other things, the user doing the requests.
#         It is intended to be handed to the authorization service to obtain
#         useful information, rather than trying to decode it in the backend.
#       type: http
#       scheme: bearer
#       bearerFormat: JWT
#       x-bearerInfoFunc: backend.presentation.rest.security_rest.verify_token
