#!/usr/bin/env python3
#Author: Oscar Valverde Escobar


from typing import List
from datetime import datetime
from backend.data.db.results import RegistroSensor, Sensor
from backend.data.config import BackendConfiguration
from backend.data.db import Esquema
from backend.data.util import SensorBackend #DELETEC COMMENT#
from backend.service import SensorService, RegistroSensorService, PlantaService, TipoPlantaService
from backend.service import SensorPlantaService, ConsejoTipoPlantaService, ElectronicSensorService #DELETEC COMMENT#
from common.data.util import TipoSensor, ZonaSensor, ModeloSensor, TipoMedida, UnidadMedida
from common.data.util import Planta as PlantaCommon, TipoPlanta as TipoPlantaCommon, ConsejoTipoPlanta as ConsejoTipoPlantaCommon
from common.data.util import Sensor as SensorCommon, RegistroSensor as RegistroSensorCommon, SensorPlanta as SensorPlantaCommon
import board #DELETEC COMMENT#
import adafruit_mcp3xxx.mcp3008 as MCP #DELETEC COMMENT#
import adafruit_bh1750 as BH1750

if __name__ == '__main__':
    cfg: BackendConfiguration = BackendConfiguration()
    cfg.load_from_file(cfg.default_config_file())
    db: Esquema = Esquema(cfg)


    #datos de inicializacion del sistema
    tipo_planta_plantilla = TipoPlantaService.create(db,"Plantilla","Plantilla de consejos vacia a copiar por el resto de tipo de plantas durante su creacion.")

    consejo_temperatura_ambiente_sin_tipo_planta = ConsejoTipoPlantaService.create(db, "Temperatura de ambiente optima.", "Plantilla", ZonaSensor.AMBIENTE, 
                                                            TipoMedida.TEMPERATURA, UnidadMedida.GRADOS_CENTIGRADOS, 0.0, 0.0)
    consejo_humedad_ambiente_sin_tipo_planta = ConsejoTipoPlantaService.create(db, "Humedad de ambiente optima.", "Plantilla", ZonaSensor.AMBIENTE, 
                                                            TipoMedida.HUMEDAD, UnidadMedida.PORCENTAJE, 0.0, 0.0)
    consejo_humedad_maceta_sin_tipo_planta = ConsejoTipoPlantaService.create(db, "Humedad de maceta optima.", "Plantilla", ZonaSensor.MACETA, 
                                                            TipoMedida.HUMEDAD, UnidadMedida.PORCENTAJE, 0.0, 0.0)
    consejo_humedad_suelo_sin_tipo_planta = ConsejoTipoPlantaService.create(db, "Humedad de suelo optima.", "Plantilla", ZonaSensor.SUELO, 
                                                            TipoMedida.HUMEDAD, UnidadMedida.PORCENTAJE, 0.0, 0.0)
    consejo_luminosidad_ambiente_sin_tipo_planta = ConsejoTipoPlantaService.create(db, "Luminosidad de ambiente optima.", "Plantilla", ZonaSensor.AMBIENTE, 
                                                            TipoMedida.LUMINOSIDAD, UnidadMedida.LUMENES, 0.0, 0.0, 0.0, 0.0)
    
    #Sensores GPIO conectados a Raspberry
    sensor_temperatura_y_humedad_ambiente_1 =SensorService.create(db,TipoSensor.TEMPERATURA_Y_HUMEDAD,ZonaSensor.AMBIENTE,1,ModeloSensor.DHT11, 
                                                                    "Humedad y temperatura ambiente 1 maceta 1", direccion_lectura="RASPBERRY",patilla_0_lectura=board.D20.id, 
                                                                    unidad_medida_0=UnidadMedida.PORCENTAJE, unidad_medida_1=UnidadMedida.GRADOS_CENTIGRADOS)

    #Sensores por SPI conectados a MCP3008
    sensor_humedad_maceta_1 = SensorService.create(db,TipoSensor.HUMEDAD,ZonaSensor.MACETA,1,ModeloSensor.FC28, "Humedad tierra 1 maceta 1",
                                                direccion_lectura="MCP3008_0",patilla_0_lectura=board.CE0.id, patilla_1_lectura=MCP.P0, 
                                                unidad_medida_0=UnidadMedida.PORCENTAJE)
    # sensor_luminosidad_ambiente_1 =SensorService.create(db,TipoSensor.LUMINOSIDAD,ZonaSensor.AMBIENTE,1,ModeloSensor.LDR, "Luminosidad 1 maceta 1",
    #                                                     direccion_lectura="MCP3008_0",patilla_0_lectura=board.CE0.id, patilla_1_lectura=MCP.P1, 
    #                                                     unidad_medida_0=UnidadMedida.LUMENES)
    # sensor_luminosidad_ambiente_2 =SensorService.create(db,TipoSensor.LUMINOSIDAD,ZonaSensor.AMBIENTE,2,ModeloSensor.LDR, "Luminosidad 2 maceta 1",
    #                                                     direccion_lectura="MCP3008_0",patilla_0_lectura=board.CE0.id, patilla_1_lectura=MCP.P2, 
    #                                                     unidad_medida_0=UnidadMedida.LUMENES)
    # sensor_luminosidad_ambiente_3 =SensorService.create(db,TipoSensor.LUMINOSIDAD,ZonaSensor.AMBIENTE,3,ModeloSensor.LDR, "Luminosidad 3 maceta 1",
    #                                                     direccion_lectura="MCP3008_0",patilla_0_lectura=board.CE0.id, patilla_1_lectura=MCP.P3, 
    #                                                     unidad_medida_0=UnidadMedida.LUMENES)    

    # Sensores pro I2C
    sensor_luminosidad_ambiente_1 =SensorService.create(db,TipoSensor.LUMINOSIDAD,ZonaSensor.AMBIENTE,1,ModeloSensor.BH1750, "Luminosidad 1 maceta 1",
                                                        direccion_lectura="I2C", patilla_0_lectura=BH1750._BH1750_DEFAULT_ADDRESS, 
                                                        unidad_medida_0=UnidadMedida.LUMENES)
    sensor_luminosidad_ambiente_2 =SensorService.create(db,TipoSensor.LUMINOSIDAD,ZonaSensor.AMBIENTE,2,ModeloSensor.BH1750, "Luminosidad 2 maceta 1",
                                                        direccion_lectura="I2C", patilla_0_lectura=BH1750._BH1750_ALT_ADDRESS, 
                                                        unidad_medida_0=UnidadMedida.LUMENES)
    
    #Creacion de primer tipo de planta
    tipo_planta_tomatera = TipoPlantaService.create(db,"Tomatera","Planta que da tomates. Facil de cultivar.")

    consejo_temperatura_ambiente_tomatera = ConsejoTipoPlantaService.get(db, "Tomatera", ZonaSensor.AMBIENTE, TipoMedida.TEMPERATURA)
    consejo_temperatura_ambiente_tomatera.setValorMinimo(10.0)
    consejo_temperatura_ambiente_tomatera.setValorMaximo(25.0)
    consejo_temperatura_ambiente_tomatera = ConsejoTipoPlantaService.updateFromCommon(db, consejo_temperatura_ambiente_tomatera)

    consejo_humedad_ambiente_tomatera = ConsejoTipoPlantaService.get(db, "Tomatera", ZonaSensor.AMBIENTE, TipoMedida.HUMEDAD)
    consejo_humedad_ambiente_tomatera.setValorMinimo(30.0)
    consejo_humedad_ambiente_tomatera.setValorMaximo(60.0)
    consejo_humedad_ambiente_tomatera = ConsejoTipoPlantaService.updateFromCommon(db, consejo_humedad_ambiente_tomatera)

    consejo_humedad_maceta_tomatera = ConsejoTipoPlantaService.get(db, "Tomatera", ZonaSensor.MACETA, TipoMedida.HUMEDAD)
    consejo_humedad_maceta_tomatera.setValorMinimo(40.0)
    consejo_humedad_maceta_tomatera.setValorMaximo(70.0)
    consejo_humedad_maceta_tomatera = ConsejoTipoPlantaService.updateFromCommon(db, consejo_humedad_maceta_tomatera)

    consejo_humedad_maceta_tomatera = ConsejoTipoPlantaService.get(db, "Tomatera", ZonaSensor.SUELO, TipoMedida.HUMEDAD)
    consejo_humedad_maceta_tomatera.setValorMinimo(40.0)
    consejo_humedad_maceta_tomatera.setValorMaximo(70.0)
    consejo_humedad_maceta_tomatera = ConsejoTipoPlantaService.updateFromCommon(db, consejo_humedad_maceta_tomatera)

    consejo_temperatura_ambiente_tomatera = ConsejoTipoPlantaService.get(db, "Tomatera", ZonaSensor.AMBIENTE, TipoMedida.LUMINOSIDAD)
    consejo_temperatura_ambiente_tomatera.setValorMinimo(60.0)
    consejo_temperatura_ambiente_tomatera.setValorMaximo(90.0)
    consejo_temperatura_ambiente_tomatera.setHorasMinimas(6.0)
    consejo_temperatura_ambiente_tomatera.setHorasMaximas(10.0)
    consejo_temperatura_ambiente_tomatera = ConsejoTipoPlantaService.updateFromCommon(db, consejo_temperatura_ambiente_tomatera)

    #Creacion de primera planta
    planta_mi_tomatera = PlantaService.create(db,"Mi tomatera","Tomatera")                                         

    # sensor_planta_1 = SensorPlantaService.createRelationFromCommon(db, sensor_temperatura_y_humedad_ambiente_1, planta_mi_tomatera)
    # sensor_planta_2 = SensorPlantaService.createRelationFromCommon(db, sensor_humedad_maceta_1, planta_mi_tomatera)
    # sensor_planta_3 = SensorPlantaService.createRelationFromCommon(db, sensor_luminosidad_ambiente_1, planta_mi_tomatera)
    # sensor_planta_4 = SensorPlantaService.createRelationFromCommon(db, sensor_luminosidad_ambiente_2, planta_mi_tomatera)
    # sensor_planta_5 = SensorPlantaService.createRelationFromCommon(db, sensor_luminosidad_ambiente_3, planta_mi_tomatera)

    #hacer que automaticamente se asignen todos los sensores activos al crear una nueva planta
    # for sensor in SensorService.listAllActive(db):

